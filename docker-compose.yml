version: '3.8'

networks:
  mydev:
    name: mydev
    
services:
  rabbitmq-container:
    hostname: "my-rabbit"
    container_name: 'rabbitmq-container'
    image: rabbitmq:3.11.0-rc.1-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq
      - rabbitmq-log:/var/log/rabbitmq
    environment:
      AMQP_URL: ampq://rabbitmq?connection_attempts=5&retry_delay=5
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    networks:
      - mydev
    
  db:
    container_name: postgres_container
    image: postgres:15.1-alpine3.16
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: testdb
      PGDATA: /var/lib/postgresql/data
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - mydev
        
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: postgres
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - mydev
        
  users-migration:
    container_name: migrations
    build:
      context: .
      dockerfile: Users.Migrations\Dockerfile
    depends_on:
      - db
    networks:
      - mydev
    environment:
      - 'ConnectionStrings:DefaultConnection=User ID = postgres;Password=postgres;Server=db;Port=5432;Database=testdb;Integrated Security=true;Pooling=true'

  users-api:
    container_name: users-api
    build:
      context: .
      dockerfile: Users.Api\Dockerfile
    restart: always
    ports:
      - '7000:80'
    depends_on:
      - db
      - rabbitmq-container
    networks:
      - mydev
    environment:
      - 'ConnectionStrings:DefaultConnection=User ID = postgres;Password=postgres;Server=db;Port=5432;Database=testdb;Integrated Security=true;Pooling=true'
      - 'MessageQueueConfiguration:Host=my-rabbit'
      - 'MessageQueueConfiguration:Port=5672'
      - 'MessageQueueConfiguration:VirtualHost=/'
      - 'MessageQueueConfiguration:Username=guest'
      - 'MessageQueueConfiguration:Password=guest'

  users-mq:
    container_name: users-mq
    build:
      context: .
      dockerfile: Users.MessageQueue\Dockerfile
    restart: always
    ports:
      - '7001:81'
    depends_on:
      - db
      - rabbitmq-container
    networks:
      - mydev
    environment:
      - 'ConnectionStrings:DefaultConnection=User ID = postgres;Password=postgres;Server=db;Port=5432;Database=testdb;Integrated Security=true;Pooling=true'
      - 'MessageQueueConfiguration:Host=my-rabbit'
      - 'MessageQueueConfiguration:Port=5672'
      - 'MessageQueueConfiguration:VirtualHost=/'
      - 'MessageQueueConfiguration:Username=guest'
      - 'MessageQueueConfiguration:Password=guest'
        
volumes:
  rabbitmq-lib:
  rabbitmq-log:
  db-data:
  pgadmin-data: